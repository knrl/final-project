/*
 * Copyright 2021 Free Software Foundation, Inc.
 *
 * This file is part of GNU Radio
 *
 * SPDX-License-Identifier: GPL-3.0-or-later
 *
 */

/***********************************************************************************/
/* This file is automatically generated using bindtool and can be manually edited  */
/* The following lines can be configured to regenerate this file during cmake      */
/* If manual edits are made, the following tags should be modified accordingly.    */
/* BINDTOOL_GEN_AUTOMATIC(0)                                                       */
/* BINDTOOL_USE_PYGCCXML(0)                                                        */
/* BINDTOOL_HEADER_FILE(constellations.h)                                        */
/* BINDTOOL_HEADER_FILE_HASH(b80d50dfe0fc254d8d6101aee3d2bcad)                     */
/***********************************************************************************/

#include <pybind11/complex.h>
#include <pybind11/pybind11.h>
#include <pybind11/stl.h>

namespace py = pybind11;

#include <ieee802_11/constellations.h>
// pydoc.h is automatically generated in the build directory
#include <constellations_pydoc.h>

void bind_constellations(py::module& m)
{

    using constellation_bpsk    = ::gr::ieee802_11::constellation_bpsk;
    using constellation_qpsk    = ::gr::ieee802_11::constellation_qpsk;
    using constellation_16qam    = ::gr::ieee802_11::constellation_16qam;
    using constellation_64qam    = ::gr::ieee802_11::constellation_64qam;


    py::class_<constellation_bpsk, gr::digital::constellation,
        std::shared_ptr<constellation_bpsk>>(m, "constellation_bpsk", D(constellation_bpsk), py::multiple_inheritance())

        .def(py::init(&constellation_bpsk::make),
           D(constellation_bpsk,make)
        )
        




        
        .def("base",&constellation_bpsk::base,       
            D(constellation_bpsk,base)
        )

        ;


    py::class_<constellation_qpsk, gr::digital::constellation,
        std::shared_ptr<constellation_qpsk>>(m, "constellation_qpsk", D(constellation_qpsk), py::multiple_inheritance())

        .def(py::init(&constellation_qpsk::make),
           D(constellation_qpsk,make)
        )
        




        
        .def("base",&constellation_qpsk::base,       
            D(constellation_qpsk,base)
        )

        ;


    py::class_<constellation_16qam, gr::digital::constellation,
        std::shared_ptr<constellation_16qam>>(m, "constellation_16qam", D(constellation_16qam), py::multiple_inheritance())

        .def(py::init(&constellation_16qam::make),
           D(constellation_16qam,make)
        )
        




        
        .def("base",&constellation_16qam::base,       
            D(constellation_16qam,base)
        )

        ;


    py::class_<constellation_64qam, gr::digital::constellation,
        std::shared_ptr<constellation_64qam>>(m, "constellation_64qam", D(constellation_64qam), py::multiple_inheritance())

        .def(py::init(&constellation_64qam::make),
           D(constellation_64qam,make)
        )
        




        
        .def("base",&constellation_64qam::base,       
            D(constellation_64qam,base)
        )

        ;




}








