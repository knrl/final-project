/*
 * Copyright 2023 Free Software Foundation, Inc.
 *
 * This file is part of GNU Radio
 *
 * SPDX-License-Identifier: GPL-3.0-or-later
 *
 */

/***********************************************************************************/
/* This file is automatically generated using bindtool and can be manually edited  */
/* The following lines can be configured to regenerate this file during cmake      */
/* If manual edits are made, the following tags should be modified accordingly.    */
/* BINDTOOL_GEN_AUTOMATIC(0)                                                       */
/* BINDTOOL_USE_PYGCCXML(0)                                                        */
/* BINDTOOL_HEADER_FILE(ofdm_mapper.h)                                        */
/* BINDTOOL_HEADER_FILE_HASH(390b334657cc0036379f2c9c4015e19b)                     */
/***********************************************************************************/

#include <pybind11/complex.h>
#include <pybind11/pybind11.h>
#include <pybind11/stl.h>

namespace py = pybind11;

#include <ieee802_11/ofdm_mapper.h>
// pydoc.h is automatically generated in the build directory
#include <ofdm_mapper_pydoc.h>

void bind_ofdm_mapper(py::module& m)
{

    using ofdm_mapper = gr::ieee802_11::ofdm_mapper;


    py::class_<ofdm_mapper, gr::block, gr::basic_block, std::shared_ptr<ofdm_mapper>>(
        m, "ofdm_mapper", D(ofdm_mapper))

        .def(py::init(&ofdm_mapper::make),
             py::arg("constellation"),
             py::arg("occupied_carriers"),
             py::arg("fft_length"),
             D(ofdm_mapper, make))


        ;
}
